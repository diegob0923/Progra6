//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Proyecto.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class ProyectoSegurosEntities : DbContext
    {
        public ProyectoSegurosEntities()
            : base("name=ProyectoSegurosEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Adiccion_Cliente> Adiccion_Cliente { get; set; }
        public DbSet<Adicciones> Adicciones { get; set; }
        public DbSet<Canton> Canton { get; set; }
        public DbSet<Cliente> Cliente { get; set; }
        public DbSet<Cobertura_de_poliza> Cobertura_de_poliza { get; set; }
        public DbSet<Distrito> Distrito { get; set; }
        public DbSet<Provincia> Provincia { get; set; }
        public DbSet<Registro_Polizas> Registro_Polizas { get; set; }
        public DbSet<sysdiagrams> sysdiagrams { get; set; }
        public DbSet<Usuarios_Sistema> Usuarios_Sistema { get; set; }
    
        public virtual ObjectResult<Retorna_Registro_Polizas_Result> Retorna_Registro_Polizas(string nombre, string primerApellido, string segundoApellido, string nombreCobertura)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var primerApellidoParameter = primerApellido != null ?
                new ObjectParameter("primerApellido", primerApellido) :
                new ObjectParameter("primerApellido", typeof(string));
    
            var segundoApellidoParameter = segundoApellido != null ?
                new ObjectParameter("segundoApellido", segundoApellido) :
                new ObjectParameter("segundoApellido", typeof(string));
    
            var nombreCoberturaParameter = nombreCobertura != null ?
                new ObjectParameter("nombreCobertura", nombreCobertura) :
                new ObjectParameter("nombreCobertura", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Retorna_Registro_Polizas_Result>("Retorna_Registro_Polizas", nombreParameter, primerApellidoParameter, segundoApellidoParameter, nombreCoberturaParameter);
        }
    
        public virtual ObjectResult<RetornaCantones_Result> RetornaCantones(string nombre, Nullable<int> id_Provincia)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var id_ProvinciaParameter = id_Provincia.HasValue ?
                new ObjectParameter("id_Provincia", id_Provincia) :
                new ObjectParameter("id_Provincia", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RetornaCantones_Result>("RetornaCantones", nombreParameter, id_ProvinciaParameter);
        }
    
        public virtual ObjectResult<RetornaCantonesID_Result> RetornaCantonesID(Nullable<int> id_Canton)
        {
            var id_CantonParameter = id_Canton.HasValue ?
                new ObjectParameter("id_Canton", id_Canton) :
                new ObjectParameter("id_Canton", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RetornaCantonesID_Result>("RetornaCantonesID", id_CantonParameter);
        }
    
        public virtual ObjectResult<RetornaProvincias_Result> RetornaProvincias(string nombre)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RetornaProvincias_Result>("RetornaProvincias", nombreParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_EliminaCanton(Nullable<int> id_Canton)
        {
            var id_CantonParameter = id_Canton.HasValue ?
                new ObjectParameter("id_Canton", id_Canton) :
                new ObjectParameter("id_Canton", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_EliminaCanton", id_CantonParameter);
        }
    
        public virtual int sp_Eliminar_Adicciones(Nullable<int> id_Adiccion)
        {
            var id_AdiccionParameter = id_Adiccion.HasValue ?
                new ObjectParameter("Id_Adiccion", id_Adiccion) :
                new ObjectParameter("Id_Adiccion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Eliminar_Adicciones", id_AdiccionParameter);
        }
    
        public virtual int sp_Eliminar_Adicciones_Cliente(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Eliminar_Adicciones_Cliente", idParameter);
        }
    
        public virtual int sp_Eliminar_Clientes(Nullable<int> id_Cliente)
        {
            var id_ClienteParameter = id_Cliente.HasValue ?
                new ObjectParameter("Id_Cliente", id_Cliente) :
                new ObjectParameter("Id_Cliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Eliminar_Clientes", id_ClienteParameter);
        }
    
        public virtual int sp_Eliminar_Cobertura_De_Poliza(Nullable<int> id_Cobertura)
        {
            var id_CoberturaParameter = id_Cobertura.HasValue ?
                new ObjectParameter("Id_Cobertura", id_Cobertura) :
                new ObjectParameter("Id_Cobertura", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Eliminar_Cobertura_De_Poliza", id_CoberturaParameter);
        }
    
        public virtual int sp_Eliminar_Registro_Polizas(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Eliminar_Registro_Polizas", idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_InsertaCanton(Nullable<int> id_Provincia, string nombre, Nullable<int> id_CantonInec)
        {
            var id_ProvinciaParameter = id_Provincia.HasValue ?
                new ObjectParameter("id_Provincia", id_Provincia) :
                new ObjectParameter("id_Provincia", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var id_CantonInecParameter = id_CantonInec.HasValue ?
                new ObjectParameter("id_CantonInec", id_CantonInec) :
                new ObjectParameter("id_CantonInec", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertaCanton", id_ProvinciaParameter, nombreParameter, id_CantonInecParameter);
        }
    
        public virtual int sp_Insertar_Adicciones(string nombre, Nullable<int> codigo)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var codigoParameter = codigo.HasValue ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Insertar_Adicciones", nombreParameter, codigoParameter);
        }
    
        public virtual int sp_Insertar_Adicciones_Clientes(Nullable<int> id_Adiccion, Nullable<int> id_Cliente)
        {
            var id_AdiccionParameter = id_Adiccion.HasValue ?
                new ObjectParameter("Id_Adiccion", id_Adiccion) :
                new ObjectParameter("Id_Adiccion", typeof(int));
    
            var id_ClienteParameter = id_Cliente.HasValue ?
                new ObjectParameter("Id_Cliente", id_Cliente) :
                new ObjectParameter("Id_Cliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Insertar_Adicciones_Clientes", id_AdiccionParameter, id_ClienteParameter);
        }
    
        public virtual int sp_Insertar_Clientes(Nullable<int> cedula, string genero, Nullable<System.DateTime> fecha_Nacimiento, string nombre, string primer_Apellido, string segundo_Apellido, string direccion, string telefono1, string telefono2, string correo, Nullable<int> id_Provincia, Nullable<int> id_Canton, Nullable<int> id_Distrito)
        {
            var cedulaParameter = cedula.HasValue ?
                new ObjectParameter("Cedula", cedula) :
                new ObjectParameter("Cedula", typeof(int));
    
            var generoParameter = genero != null ?
                new ObjectParameter("Genero", genero) :
                new ObjectParameter("Genero", typeof(string));
    
            var fecha_NacimientoParameter = fecha_Nacimiento.HasValue ?
                new ObjectParameter("Fecha_Nacimiento", fecha_Nacimiento) :
                new ObjectParameter("Fecha_Nacimiento", typeof(System.DateTime));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var primer_ApellidoParameter = primer_Apellido != null ?
                new ObjectParameter("Primer_Apellido", primer_Apellido) :
                new ObjectParameter("Primer_Apellido", typeof(string));
    
            var segundo_ApellidoParameter = segundo_Apellido != null ?
                new ObjectParameter("Segundo_Apellido", segundo_Apellido) :
                new ObjectParameter("Segundo_Apellido", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var telefono1Parameter = telefono1 != null ?
                new ObjectParameter("Telefono1", telefono1) :
                new ObjectParameter("Telefono1", typeof(string));
    
            var telefono2Parameter = telefono2 != null ?
                new ObjectParameter("Telefono2", telefono2) :
                new ObjectParameter("Telefono2", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var id_ProvinciaParameter = id_Provincia.HasValue ?
                new ObjectParameter("Id_Provincia", id_Provincia) :
                new ObjectParameter("Id_Provincia", typeof(int));
    
            var id_CantonParameter = id_Canton.HasValue ?
                new ObjectParameter("Id_Canton", id_Canton) :
                new ObjectParameter("Id_Canton", typeof(int));
    
            var id_DistritoParameter = id_Distrito.HasValue ?
                new ObjectParameter("Id_Distrito", id_Distrito) :
                new ObjectParameter("Id_Distrito", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Insertar_Clientes", cedulaParameter, generoParameter, fecha_NacimientoParameter, nombreParameter, primer_ApellidoParameter, segundo_ApellidoParameter, direccionParameter, telefono1Parameter, telefono2Parameter, correoParameter, id_ProvinciaParameter, id_CantonParameter, id_DistritoParameter);
        }
    
        public virtual int sp_Insertar_Cobertura_De_Poliza(string nombre, string descripcion, Nullable<int> porcentaje)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var porcentajeParameter = porcentaje.HasValue ?
                new ObjectParameter("Porcentaje", porcentaje) :
                new ObjectParameter("Porcentaje", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Insertar_Cobertura_De_Poliza", nombreParameter, descripcionParameter, porcentajeParameter);
        }
    
        public virtual int sp_Insertar_Registro_Polizas(Nullable<int> id_Cobertura, Nullable<int> id_Cliente, Nullable<decimal> monto_Asegurado, Nullable<double> porcentaje_Cobertura, Nullable<int> numero_Adicciones, Nullable<decimal> monto_Adicciones, Nullable<decimal> prima_Antes_Impuestos, Nullable<decimal> impuestos, Nullable<decimal> prima_Final)
        {
            var id_CoberturaParameter = id_Cobertura.HasValue ?
                new ObjectParameter("Id_Cobertura", id_Cobertura) :
                new ObjectParameter("Id_Cobertura", typeof(int));
    
            var id_ClienteParameter = id_Cliente.HasValue ?
                new ObjectParameter("Id_Cliente", id_Cliente) :
                new ObjectParameter("Id_Cliente", typeof(int));
    
            var monto_AseguradoParameter = monto_Asegurado.HasValue ?
                new ObjectParameter("Monto_Asegurado", monto_Asegurado) :
                new ObjectParameter("Monto_Asegurado", typeof(decimal));
    
            var porcentaje_CoberturaParameter = porcentaje_Cobertura.HasValue ?
                new ObjectParameter("Porcentaje_Cobertura", porcentaje_Cobertura) :
                new ObjectParameter("Porcentaje_Cobertura", typeof(double));
    
            var numero_AdiccionesParameter = numero_Adicciones.HasValue ?
                new ObjectParameter("Numero_Adicciones", numero_Adicciones) :
                new ObjectParameter("Numero_Adicciones", typeof(int));
    
            var monto_AdiccionesParameter = monto_Adicciones.HasValue ?
                new ObjectParameter("Monto_Adicciones", monto_Adicciones) :
                new ObjectParameter("Monto_Adicciones", typeof(decimal));
    
            var prima_Antes_ImpuestosParameter = prima_Antes_Impuestos.HasValue ?
                new ObjectParameter("Prima_Antes_Impuestos", prima_Antes_Impuestos) :
                new ObjectParameter("Prima_Antes_Impuestos", typeof(decimal));
    
            var impuestosParameter = impuestos.HasValue ?
                new ObjectParameter("Impuestos", impuestos) :
                new ObjectParameter("Impuestos", typeof(decimal));
    
            var prima_FinalParameter = prima_Final.HasValue ?
                new ObjectParameter("Prima_Final", prima_Final) :
                new ObjectParameter("Prima_Final", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Insertar_Registro_Polizas", id_CoberturaParameter, id_ClienteParameter, monto_AseguradoParameter, porcentaje_CoberturaParameter, numero_AdiccionesParameter, monto_AdiccionesParameter, prima_Antes_ImpuestosParameter, impuestosParameter, prima_FinalParameter);
        }
    
        public virtual int sp_ModificaCanton(Nullable<int> id_Canton, Nullable<int> id_Provincia, string nombre, Nullable<int> id_CantonInec)
        {
            var id_CantonParameter = id_Canton.HasValue ?
                new ObjectParameter("id_Canton", id_Canton) :
                new ObjectParameter("id_Canton", typeof(int));
    
            var id_ProvinciaParameter = id_Provincia.HasValue ?
                new ObjectParameter("id_Provincia", id_Provincia) :
                new ObjectParameter("id_Provincia", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var id_CantonInecParameter = id_CantonInec.HasValue ?
                new ObjectParameter("id_CantonInec", id_CantonInec) :
                new ObjectParameter("id_CantonInec", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ModificaCanton", id_CantonParameter, id_ProvinciaParameter, nombreParameter, id_CantonInecParameter);
        }
    
        public virtual int sp_Modificar_Adicciones(Nullable<int> id_Adiccion, string nombre, Nullable<int> codigo)
        {
            var id_AdiccionParameter = id_Adiccion.HasValue ?
                new ObjectParameter("Id_Adiccion", id_Adiccion) :
                new ObjectParameter("Id_Adiccion", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var codigoParameter = codigo.HasValue ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Modificar_Adicciones", id_AdiccionParameter, nombreParameter, codigoParameter);
        }
    
        public virtual int sp_Modificar_Adicciones_Clientes(Nullable<int> id, Nullable<int> id_Adiccion, Nullable<int> id_Cliente)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var id_AdiccionParameter = id_Adiccion.HasValue ?
                new ObjectParameter("Id_Adiccion", id_Adiccion) :
                new ObjectParameter("Id_Adiccion", typeof(int));
    
            var id_ClienteParameter = id_Cliente.HasValue ?
                new ObjectParameter("Id_Cliente", id_Cliente) :
                new ObjectParameter("Id_Cliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Modificar_Adicciones_Clientes", idParameter, id_AdiccionParameter, id_ClienteParameter);
        }
    
        public virtual int sp_Modificar_Clientes(Nullable<int> id_Cliente, Nullable<int> cedula, string genero, Nullable<System.DateTime> fecha_Nacimiento, string nombre, string primer_Apellido, string segundo_Apellido, string direccion, string telefono1, string telefono2, string correo, Nullable<int> id_Provincia, Nullable<int> id_Canton, Nullable<int> id_Distrito)
        {
            var id_ClienteParameter = id_Cliente.HasValue ?
                new ObjectParameter("Id_Cliente", id_Cliente) :
                new ObjectParameter("Id_Cliente", typeof(int));
    
            var cedulaParameter = cedula.HasValue ?
                new ObjectParameter("Cedula", cedula) :
                new ObjectParameter("Cedula", typeof(int));
    
            var generoParameter = genero != null ?
                new ObjectParameter("Genero", genero) :
                new ObjectParameter("Genero", typeof(string));
    
            var fecha_NacimientoParameter = fecha_Nacimiento.HasValue ?
                new ObjectParameter("Fecha_Nacimiento", fecha_Nacimiento) :
                new ObjectParameter("Fecha_Nacimiento", typeof(System.DateTime));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var primer_ApellidoParameter = primer_Apellido != null ?
                new ObjectParameter("Primer_Apellido", primer_Apellido) :
                new ObjectParameter("Primer_Apellido", typeof(string));
    
            var segundo_ApellidoParameter = segundo_Apellido != null ?
                new ObjectParameter("Segundo_Apellido", segundo_Apellido) :
                new ObjectParameter("Segundo_Apellido", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var telefono1Parameter = telefono1 != null ?
                new ObjectParameter("Telefono1", telefono1) :
                new ObjectParameter("Telefono1", typeof(string));
    
            var telefono2Parameter = telefono2 != null ?
                new ObjectParameter("Telefono2", telefono2) :
                new ObjectParameter("Telefono2", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var id_ProvinciaParameter = id_Provincia.HasValue ?
                new ObjectParameter("Id_Provincia", id_Provincia) :
                new ObjectParameter("Id_Provincia", typeof(int));
    
            var id_CantonParameter = id_Canton.HasValue ?
                new ObjectParameter("Id_Canton", id_Canton) :
                new ObjectParameter("Id_Canton", typeof(int));
    
            var id_DistritoParameter = id_Distrito.HasValue ?
                new ObjectParameter("Id_Distrito", id_Distrito) :
                new ObjectParameter("Id_Distrito", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Modificar_Clientes", id_ClienteParameter, cedulaParameter, generoParameter, fecha_NacimientoParameter, nombreParameter, primer_ApellidoParameter, segundo_ApellidoParameter, direccionParameter, telefono1Parameter, telefono2Parameter, correoParameter, id_ProvinciaParameter, id_CantonParameter, id_DistritoParameter);
        }
    
        public virtual int sp_Modificar_Cobertura_De_Poliza(Nullable<int> id_Cobertura, string nombre, string descripcion, Nullable<int> porcentaje)
        {
            var id_CoberturaParameter = id_Cobertura.HasValue ?
                new ObjectParameter("Id_Cobertura", id_Cobertura) :
                new ObjectParameter("Id_Cobertura", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var porcentajeParameter = porcentaje.HasValue ?
                new ObjectParameter("Porcentaje", porcentaje) :
                new ObjectParameter("Porcentaje", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Modificar_Cobertura_De_Poliza", id_CoberturaParameter, nombreParameter, descripcionParameter, porcentajeParameter);
        }
    
        public virtual int sp_Modificar_Registro_Polizas(Nullable<int> id_Poliza, Nullable<int> id_Cobertura, Nullable<int> id_Cliente, Nullable<decimal> monto_Asegurado, Nullable<double> porcentaje_Cobertura, Nullable<int> numero_Adicciones, Nullable<decimal> monto_Adicciones, Nullable<decimal> prima_Antes_Impuestos, Nullable<decimal> impuestos, Nullable<decimal> prima_Final)
        {
            var id_PolizaParameter = id_Poliza.HasValue ?
                new ObjectParameter("Id_Poliza", id_Poliza) :
                new ObjectParameter("Id_Poliza", typeof(int));
    
            var id_CoberturaParameter = id_Cobertura.HasValue ?
                new ObjectParameter("Id_Cobertura", id_Cobertura) :
                new ObjectParameter("Id_Cobertura", typeof(int));
    
            var id_ClienteParameter = id_Cliente.HasValue ?
                new ObjectParameter("Id_Cliente", id_Cliente) :
                new ObjectParameter("Id_Cliente", typeof(int));
    
            var monto_AseguradoParameter = monto_Asegurado.HasValue ?
                new ObjectParameter("Monto_Asegurado", monto_Asegurado) :
                new ObjectParameter("Monto_Asegurado", typeof(decimal));
    
            var porcentaje_CoberturaParameter = porcentaje_Cobertura.HasValue ?
                new ObjectParameter("Porcentaje_Cobertura", porcentaje_Cobertura) :
                new ObjectParameter("Porcentaje_Cobertura", typeof(double));
    
            var numero_AdiccionesParameter = numero_Adicciones.HasValue ?
                new ObjectParameter("Numero_Adicciones", numero_Adicciones) :
                new ObjectParameter("Numero_Adicciones", typeof(int));
    
            var monto_AdiccionesParameter = monto_Adicciones.HasValue ?
                new ObjectParameter("Monto_Adicciones", monto_Adicciones) :
                new ObjectParameter("Monto_Adicciones", typeof(decimal));
    
            var prima_Antes_ImpuestosParameter = prima_Antes_Impuestos.HasValue ?
                new ObjectParameter("Prima_Antes_Impuestos", prima_Antes_Impuestos) :
                new ObjectParameter("Prima_Antes_Impuestos", typeof(decimal));
    
            var impuestosParameter = impuestos.HasValue ?
                new ObjectParameter("Impuestos", impuestos) :
                new ObjectParameter("Impuestos", typeof(decimal));
    
            var prima_FinalParameter = prima_Final.HasValue ?
                new ObjectParameter("Prima_Final", prima_Final) :
                new ObjectParameter("Prima_Final", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Modificar_Registro_Polizas", id_PolizaParameter, id_CoberturaParameter, id_ClienteParameter, monto_AseguradoParameter, porcentaje_CoberturaParameter, numero_AdiccionesParameter, monto_AdiccionesParameter, prima_Antes_ImpuestosParameter, impuestosParameter, prima_FinalParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual ObjectResult<sp_Retorna_Adiccion_Cliente_Result> sp_Retorna_Adiccion_Cliente(string nombre, string primerApellido, string segundoApellido, string nombreAdiccion)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var primerApellidoParameter = primerApellido != null ?
                new ObjectParameter("primerApellido", primerApellido) :
                new ObjectParameter("primerApellido", typeof(string));
    
            var segundoApellidoParameter = segundoApellido != null ?
                new ObjectParameter("segundoApellido", segundoApellido) :
                new ObjectParameter("segundoApellido", typeof(string));
    
            var nombreAdiccionParameter = nombreAdiccion != null ?
                new ObjectParameter("nombreAdiccion", nombreAdiccion) :
                new ObjectParameter("nombreAdiccion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Retorna_Adiccion_Cliente_Result>("sp_Retorna_Adiccion_Cliente", nombreParameter, primerApellidoParameter, segundoApellidoParameter, nombreAdiccionParameter);
        }
    
        public virtual ObjectResult<sp_Retorna_Adiccion_ClienteID_Result> sp_Retorna_Adiccion_ClienteID(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Retorna_Adiccion_ClienteID_Result>("sp_Retorna_Adiccion_ClienteID", idParameter);
        }
    
        public virtual ObjectResult<sp_Retorna_AdiccionesID_Result> sp_Retorna_AdiccionesID(Nullable<int> id_Adiccion)
        {
            var id_AdiccionParameter = id_Adiccion.HasValue ?
                new ObjectParameter("Id_Adiccion", id_Adiccion) :
                new ObjectParameter("Id_Adiccion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Retorna_AdiccionesID_Result>("sp_Retorna_AdiccionesID", id_AdiccionParameter);
        }
    
        public virtual ObjectResult<sp_Retorna_ClienteID_Result> sp_Retorna_ClienteID(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Retorna_ClienteID_Result>("sp_Retorna_ClienteID", idParameter);
        }
    
        public virtual ObjectResult<sp_Retorna_Cobertura_De_PolizaID_Result> sp_Retorna_Cobertura_De_PolizaID(Nullable<int> id_Cobertura)
        {
            var id_CoberturaParameter = id_Cobertura.HasValue ?
                new ObjectParameter("Id_Cobertura", id_Cobertura) :
                new ObjectParameter("Id_Cobertura", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Retorna_Cobertura_De_PolizaID_Result>("sp_Retorna_Cobertura_De_PolizaID", id_CoberturaParameter);
        }
    
        public virtual ObjectResult<sp_Retorna_Datos_Correo_Result> sp_Retorna_Datos_Correo(Nullable<int> cedula)
        {
            var cedulaParameter = cedula.HasValue ?
                new ObjectParameter("cedula", cedula) :
                new ObjectParameter("cedula", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Retorna_Datos_Correo_Result>("sp_Retorna_Datos_Correo", cedulaParameter);
        }
    
        public virtual ObjectResult<sp_Retorna_Poliza_Cliente_Result> sp_Retorna_Poliza_Cliente(Nullable<int> cedula_Cliente, Nullable<int> id_Poliza)
        {
            var cedula_ClienteParameter = cedula_Cliente.HasValue ?
                new ObjectParameter("Cedula_Cliente", cedula_Cliente) :
                new ObjectParameter("Cedula_Cliente", typeof(int));
    
            var id_PolizaParameter = id_Poliza.HasValue ?
                new ObjectParameter("Id_Poliza", id_Poliza) :
                new ObjectParameter("Id_Poliza", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Retorna_Poliza_Cliente_Result>("sp_Retorna_Poliza_Cliente", cedula_ClienteParameter, id_PolizaParameter);
        }
    
        public virtual ObjectResult<sp_Retorna_Registro_PolizasID_Result> sp_Retorna_Registro_PolizasID(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Retorna_Registro_PolizasID_Result>("sp_Retorna_Registro_PolizasID", idParameter);
        }
    
        public virtual ObjectResult<RetornaDistritos_Result> RetornaDistritos(string nombre, Nullable<int> id_Canton)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var id_CantonParameter = id_Canton.HasValue ?
                new ObjectParameter("id_Canton", id_Canton) :
                new ObjectParameter("id_Canton", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RetornaDistritos_Result>("RetornaDistritos", nombreParameter, id_CantonParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<sp_Retorna_Adicciones_Result> sp_Retorna_Adicciones(string nombre, Nullable<int> codigo)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var codigoParameter = codigo.HasValue ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Retorna_Adicciones_Result>("sp_Retorna_Adicciones", nombreParameter, codigoParameter);
        }
    
        public virtual ObjectResult<sp_Retorna_Cobertura_De_Poliza_Result> sp_Retorna_Cobertura_De_Poliza(string nombre)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Retorna_Cobertura_De_Poliza_Result>("sp_Retorna_Cobertura_De_Poliza", nombreParameter);
        }
    
        public virtual ObjectResult<sp_Retorna_Clientes_Result> sp_Retorna_Clientes(Nullable<int> cedula, string nombre, string primer_apellido, string segundo_apellido)
        {
            var cedulaParameter = cedula.HasValue ?
                new ObjectParameter("cedula", cedula) :
                new ObjectParameter("cedula", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var primer_apellidoParameter = primer_apellido != null ?
                new ObjectParameter("primer_apellido", primer_apellido) :
                new ObjectParameter("primer_apellido", typeof(string));
    
            var segundo_apellidoParameter = segundo_apellido != null ?
                new ObjectParameter("segundo_apellido", segundo_apellido) :
                new ObjectParameter("segundo_apellido", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Retorna_Clientes_Result>("sp_Retorna_Clientes", cedulaParameter, nombreParameter, primer_apellidoParameter, segundo_apellidoParameter);
        }
    }
}
